import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

// internal imports
import { API_ENDPOINTS, API_URL, options } from '@/common/constants/endpoints';
import { ROUTES } from '@/common/constants/routes';
import Header from '@/components/Header';
import { SpinnerLoader } from '@/components/SpinnerLoader';

export default function Home() {
    const router = useRouter();

    const [isLoading, setIsLoading] = useState(true);
    const [currencies, setCurrencies] = useState<any[] | null>(null);

    const goToDetails = (symbol: string) => {
        router.push({
            pathname: ROUTES.DETAILS,
            query: 'symbol=' + symbol.slice(1),
        });
    };

    useEffect(() => {
        //const wss = new WebSocket('wss://api-pub.bitfinex.com/ws/2')
        //wss.onmessage = (msg: any) => console.log(msg.data);
        //let msg = JSON.stringify({
        //    event: 'subscribe',
        //    channel: 'ticker',
        //    symbol: 'tBTCUSD'
        //})

        //wss.onopen = () => {
        //    console.log('openeedd')
        //    wss.send(msg)
        //}

        fetch(API_URL + API_ENDPOINTS.TICKERS.ALL_SYMBOLS, options)
            .then((response) => response.json())
            .then((response) => setCurrencies(response.slice(0, 5)))
            .catch((err) => console.error(err));

        setIsLoading(false);
    }, []);

    if (isLoading) {
        return <SpinnerLoader />;
    }
    return (
        <>
            <Head>
                <title>Home - Crypto Currency</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="min-h-screen px-5 py-10">
                <Header />
                <table className="crypto-table">
                    <thead>
                        <tr>
                            <th className="w-[200px] text-left">Name</th>
                            <th className="w-[150px] text-right">Last Price</th>
                            <th className="w-[150px] text-right">Change</th>
                            <th className="w-[200px] text-right">
                                Change Percent
                            </th>
                            <th className="w-[150px] text-right">High</th>
                            <th className="w-[150px] text-right">Low</th>
                        </tr>
                    </thead>
                    <tbody>
                        {currencies?.map((item) => (
                            <tr key={item[0]}>
                                <td
                                    className="text-primary font-bold hover:underline cursor-pointer"
                                    onClick={() => goToDetails(item[0])}>
                                    {item[0].slice(1)}
                                </td>
                                <td className="text-right">{item[7]}</td>
                                <td className="text-right">{item[5]}</td>
                                <td className="text-right">{item[6] * 100}</td>
                                <td className="text-right">{item[9]}</td>
                                <td className="text-right">{item[10]}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </main>
        </>
    );
}
